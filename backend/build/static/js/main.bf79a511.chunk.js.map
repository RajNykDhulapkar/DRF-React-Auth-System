{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","auth","useSelector","state","className","isAuthenticated","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","Accept","axios","get","res","type","payload","data","connect","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","continueWithGoogle","window","location","replace","authorization_url","onSubmit","preventDefault","placeholder","required","minLength","onClick","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","params","reset_password","err","requestSent","setRequestSent","alert","reset_password_confirm","new_password","re_new_password","logout","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","checkAuthenticated","code","googleAuthenticate","details","formBody","Object","keys","map","key","encodeURIComponent","join","props","useLocation","useEffect","values","queryString","parse","search","console","log","children","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf79a511.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n    const auth = useSelector((state) => state.auth);\r\n    return (\r\n        <div className='container'>\r\n            <div className='p-5 mt-5 mb-4 bg-light rounded-3'>\r\n                <div className='container-fluid py-5'>\r\n                    <h1 className='display-5 fw-bold'>Welcome to Auth System</h1>\r\n                    <p className='col-md-8 fs-4'>\r\n                        This is a authentication system built using Ddjango Rest Framework and\r\n                        React.\r\n                    </p>\r\n\r\n                    {!auth.isAuthenticated && (\r\n                        <>\r\n                            <p>Click the login Button</p>\r\n                            <Link className='btn btn-primary btn-lg' to='/login' role='button'>\r\n                                Login\r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const GOOGLE_AUTH_SUCCESS = \"GOOGLE_AUTH_SUCCESS\";\r\nexport const GOOGLE_AUTH_FAIL = \"GOOGLE_AUTH_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import axios from \"axios\";\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n} from \"./types\";\r\n\r\nexport const load_user = () => async (dispatch) => {\r\n    if (localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n                Accept: \"application/json\",\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(\"auth/users/me/\", config);\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL,\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate = (state, code) => async (dispatch) => {\r\n    if (state && code && !localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n        };\r\n\r\n        const details = {\r\n            state: state,\r\n            code: code,\r\n        };\r\n\r\n        const formBody = Object.keys(details)\r\n            .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(details[key]))\r\n            .join(\"&\");\r\n\r\n        try {\r\n            const res = await axios.post(`auth/o/google-oauth2/?${formBody}`, config);\r\n            dispatch({\r\n                type: GOOGLE_AUTH_SUCCESS,\r\n                payload: res.data,\r\n            });\r\n            dispatch(load_user());\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GOOGLE_AUTH_FAIL,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n    if (localStorage.getItem(\"access\")) {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        };\r\n        const body = JSON.stringify({\r\n            token: localStorage.getItem(\"access\"),\r\n        });\r\n\r\n        try {\r\n            const res = await axios.post(\"auth/jwt/verify/\", body, config);\r\n            if (res.data.code !== \"token_not_valid\") {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS,\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL,\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(\"auth/jwt/create/\", body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (first_name, last_name, email, password, re_password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(\"auth/users/\", body, config);\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\n// for user activation\r\nexport const verify = (uid, token) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n    try {\r\n        const res = await axios.post(\"auth/users/activation/\", body, config);\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        axios.post(\"auth/users/reset_password/\", body, config);\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL,\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm =\r\n    (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n        try {\r\n            axios.post(\"auth/users/reset_password_confirm/\", body, config);\r\n            dispatch({\r\n                type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PASSWORD_RESET_CONFIRM_FAIL,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    };\r\n    // goolge login\r\n    const continueWithGoogle = async () => {\r\n        try {\r\n            const res = await axios.get(\"auth/o/google-oauth2/?redirect_uri=http://localhost:8000\");\r\n            window.location.replace(res.data.authorization_url);\r\n        } catch (err) {}\r\n    };\r\n    // is the user authenticated\r\n    // then redirect them to home page\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your account</p>\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        className='form-control'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary'>Login</button>\r\n            </form>\r\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\r\n                Continue with Google\r\n            </button>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        re_password: \"\",\r\n    });\r\n    const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (password === re_password) {\r\n            signup(first_name, last_name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n    // google authentication\r\n    const continueWithGoogle = async () => {\r\n        try {\r\n            const res = await axios.get(\"auth/o/google-oauth2/?redirect_uri=http://localhost:8000\");\r\n            window.location.replace(res.data.authorization_url);\r\n        } catch (err) {}\r\n    };\r\n    // is the user authenticated\r\n    // then redirect them to home page\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />;\r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your account</p>\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='First Name'\r\n                        name='first_name'\r\n                        value={first_name}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='text'\r\n                        className='form-control'\r\n                        placeholder='Last Name'\r\n                        name='last_name'\r\n                        value={last_name}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        className='form-control'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary'>Register</button>\r\n            </form>\r\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\r\n                Continue with Google\r\n            </button>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ match, verify }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = (e) => {\r\n        // e.preventDefault();\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n    // is the user authenticated\r\n    // then redirect them to home page\r\n    if (verified) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div\r\n                className='d-flex flex-column justify-content-center align-item-center'\r\n                style={{ marginTop: \"200px\" }}\r\n            >\r\n                <h1>Verify Your Account</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: \"50px\" }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n    });\r\n    const { email } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n    // is the user authenticated\r\n    // then redirect them to home page\r\n    if (requestSent) {\r\n        window.alert(\"A mail has been sent to your email to confirm password reset\");\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset</h1>\r\n\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='email'\r\n                        className='form-control'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={(e) => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: \"\",\r\n        re_new_password: \"\",\r\n    });\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n    // is the user authenticated\r\n    // then redirect them to home page\r\n    if (requestSent) {\r\n        return <Redirect to='/' />;\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        type='password'\r\n                        className='form-control'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={(e) => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const authLinks = () => (\r\n        <li className='nav-item'>\r\n            <a className='nav-link' href='#!' onClick={logout}>\r\n                Log Out\r\n            </a>\r\n        </li>\r\n    );\r\n\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/signup'>\r\n                    Sign Up\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' to='/'>\r\n                    Auth System\r\n                </Link>\r\n                <button\r\n                    className='navbar-toggler'\r\n                    type='button'\r\n                    data-bs-toggle='collapse'\r\n                    data-bs-target='#navbarNav'\r\n                    aria-controls='navbarNav'\r\n                    aria-expanded='false'\r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <Link className='nav-link active' aria-current='page' to='/'>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated, load_user, googleAuthenticate } from \"../actions/auth\";\r\nimport queryString from \"query-string\";\r\n\r\nconst Layout = (props) => {\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        console.log(\"state \" + state);\r\n        console.log(\"code \" + code);\r\n\r\n        if (state && code) {\r\n            props.googleAuthenticate(state, code);\r\n        } else {\r\n            props.checkAuthenticated();\r\n            props.load_user();\r\n        }\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user, googleAuthenticate })(Layout);\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem(\"access\"),\r\n    refresh: localStorage.getItem(\"refresh\"),\r\n    isAuthenticated: null,\r\n    user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case GOOGLE_AUTH_SUCCESS:\r\n            localStorage.setItem(\"access\", payload.access);\r\n            localStorage.setItem(\"refresh\", payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n            };\r\n\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n            };\r\n\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n            };\r\n\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n            };\r\n\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n\r\n        case GOOGLE_AUTH_FAIL:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem(\"access\");\r\n            localStorage.removeItem(\"refresh\");\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            };\r\n\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n    auth,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// containers import\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Activate from \"./containers/Activate\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\n\r\n// hoc import\r\nimport Layout from \"./hocs/Layout\";\r\n\r\n// redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route exact path='/login' component={Login} />\r\n                        <Route exact path='/signup' component={Signup} />\r\n                        <Route exact path='/reset-password' component={ResetPassword} />\r\n                        <Route\r\n                            exact\r\n                            path='/password/reset/confirm/:uid/:token'\r\n                            component={ResetPasswordConfirm}\r\n                        />\r\n                        <Route exact path='/activate/:uid/:token' component={Activate} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Router>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}